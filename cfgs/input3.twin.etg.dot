digraph "Execution Trace Graph" {
	label="Execution Trace Graph";

	Node0 [label = "0"];
	Node0x6ef2a0 [label = "0x6ef2a0"];
	Node0x6ef4c0 [label = "0x6ef4c0"];
	Node0x6f3b90 [label = "0x6f3b90"];
	Node0x6f7210 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"last line!\"*/ (const char *) 0x4008c7);)"];
	Node0x704290 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"sum of two numbers is NOT more than 15\"*/ (const char *) 0x4008a0);)"];
	Node0x7adf40 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"left option is missing!\"*/ (const char *) 0x4007db);)"];
	Node0x7e82f0 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"invalid right value!\"*/ (const char *) 0x400828);)"];
	Node0x859050 [label = "0x859050"];
	Node0x862ba0 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"num1 is smaller than num2\"*/ (const char *) 0x40083d);)"];
	Node0x900410 [label = "0x900410"];
	Node0x916fc0 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"right option is missing!\"*/ (const char *) 0x40080f);)"];
	Node0x925980 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"invalid right value!\"*/ (const char *) 0x400828);)"];
	Node0x9b06f0 [label = "FunctionInvocation (calling-line=regs.rax = strcmp (/*\"--right\"*/ (const char *) m7fffffffe340_1_64 /*0x7fffffffe575*/, /*\"--right\"*/ (const char *) 0x400807);)"];
	Node0x9ea660 [label = "0x9ea660"];
	Node0xa04370 [label = "0xa04370"];
	Node0xa043c0 [label = "0xa043c0"];
	Node0xffd620 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"invalid left value!\"*/ (const char *) 0x4007f3);)"];
	Node0x100d5c0 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"Usage: program --left <num1> --right <num2>\"*/ (const char *) 0x4007a8);)"];
	Node0x10166a0 [label = "FunctionInvocation (calling-line=regs.rax = strcmp (/*\"--left\"*/ (const char *) m7fffffffe330_0_64 /*0x7fffffffe56c*/, /*\"--left\"*/ (const char *) 0x4007d4);)"];
	Node0x13798a0 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"invalid right value!\"*/ (const char *) 0x400828);)"];
	Node0x1675640 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"invalid left value!\"*/ (const char *) 0x4007f3);)"];
	Node0x16e9280 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"invalid left value!\"*/ (const char *) 0x4007f3);)"];
	Node0x17ab420 [label = "0x17ab420"];
	Node0x1818170 [label = "0x1818170"];
	Node0x1818a00 [label = "0x1818a00"];
	Node0x1818d40 [label = "0x1818d40"];
	Node0x1925c00 [label = "0x1925c00"];
	Node0x1999360 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"num1 is NOT smaller than num2\"*/ (const char *) 0x400857);)"];
	Node0x1a3fa70 [label = "FunctionInvocation (calling-line=regs.rax = puts (/*\"sum of two numbers is more than 15\"*/ (const char *) 0x400878);)"];
	Node0 -> Node0x10166a0 [label = "signExtend_0x80_0x20 ((rdi_0 & 0xffffffff))
	 > UINT128 (0x0, 0x0, 0x0, 0x4)"];
	Node0x10166a0 -> Node0x859050 [label = ""];
	Node0 -> Node0x100d5c0 [label = "signExtend_0x80_0x20 ((rdi_0 & 0xffffffff))
	 <= UINT128 (0x0, 0x0, 0x0, 0x4)"];
	Node0x100d5c0 -> Node0x6f3b90 [label = ""];
	Node0x859050 -> Node0xa04370 [label = "(rax_1 & 0xffffffff)
	 == 0"];
	Node0x859050 -> Node0x7adf40 [label = "(rax_1 & 0xffffffff)
	 != 0"];
	Node0x7adf40 -> Node0x6f3b90 [label = ""];
	Node0x6f3b90 -> Node0x9ea660 [label = "0x0
	 == 0"];
	Node0xa04370 -> Node0x6ef2a0 [label = "n_v_argv_2_1
	 == 0"];
	Node0xa04370 -> Node0xffd620 [label = "n_v_argv_2_1
	 != 0"];
	Node0xffd620 -> Node0x6f3b90 [label = ""];
	Node0x6ef2a0 -> Node0xa043c0 [label = "signExtend_0x80_0x8 (n_v_argv_2_0)
	 > UINT128 (0x0, 0x0, 0x0, 0x2f)"];
	Node0x6ef2a0 -> Node0x16e9280 [label = "signExtend_0x80_0x8 (n_v_argv_2_0)
	 <= UINT128 (0x0, 0x0, 0x0, 0x2f)"];
	Node0x16e9280 -> Node0x6f3b90 [label = ""];
	Node0xa043c0 -> Node0x9b06f0 [label = "signExtend_0x80_0x8 (n_v_argv_2_0)
	 <= UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x9b06f0 -> Node0x6ef4c0 [label = ""];
	Node0xa043c0 -> Node0x1675640 [label = "signExtend_0x80_0x8 (n_v_argv_2_0)
	 > UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x1675640 -> Node0x6f3b90 [label = ""];
	Node0x6ef4c0 -> Node0x900410 [label = "(rax_2 & 0xffffffff)
	 == 0"];
	Node0x6ef4c0 -> Node0x916fc0 [label = "(rax_2 & 0xffffffff)
	 != 0"];
	Node0x916fc0 -> Node0x6f3b90 [label = ""];
	Node0x900410 -> Node0x1818170 [label = "n_v_argv_4_1
	 == 0"];
	Node0x900410 -> Node0x925980 [label = "n_v_argv_4_1
	 != 0"];
	Node0x925980 -> Node0x6f3b90 [label = ""];
	Node0x1818170 -> Node0x17ab420 [label = "signExtend_0x80_0x8 (n_v_argv_4_0)
	 > UINT128 (0x0, 0x0, 0x0, 0x2f)"];
	Node0x1818170 -> Node0x7e82f0 [label = "signExtend_0x80_0x8 (n_v_argv_4_0)
	 <= UINT128 (0x0, 0x0, 0x0, 0x2f)"];
	Node0x7e82f0 -> Node0x6f3b90 [label = ""];
	Node0x17ab420 -> Node0x1818d40 [label = "signExtend_0x80_0x8 (n_v_argv_4_0)
	 <= UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x17ab420 -> Node0x13798a0 [label = "signExtend_0x80_0x8 (n_v_argv_4_0)
	 > UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x13798a0 -> Node0x6f3b90 [label = ""];
	Node0x1818d40 -> Node0x862ba0 [label = "signExtend_0x80_0x20 (((signExtend_0x20_0x8 (n_v_argv_2_0) - 0x30) & 0xffffffff))
	 < signExtend_0x80_0x20 (((signExtend_0x20_0x8 (n_v_argv_4_0) - 0x30) & 0xffffffff))"];
	Node0x862ba0 -> Node0x1818a00 [label = ""];
	Node0x1818d40 -> Node0x1999360 [label = "signExtend_0x80_0x20 (((signExtend_0x20_0x8 (n_v_argv_2_0) - 0x30) & 0xffffffff))
	 >= signExtend_0x80_0x20 (((signExtend_0x20_0x8 (n_v_argv_4_0) - 0x30) & 0xffffffff))"];
	Node0x1999360 -> Node0x1818a00 [label = ""];
	Node0x1818a00 -> Node0x704290 [label = "signExtend_0x80_0x20 ((((signExtend_0x20_0x8 (n_v_argv_4_0) - 0x30) + (signExtend_0x20_0x8 (n_v_argv_2_0) - 0x30)) & 0xffffffff))
	 <= UINT128 (0x0, 0x0, 0x0, 0xf)"];
	Node0x704290 -> Node0x1925c00 [label = ""];
	Node0x1818a00 -> Node0x1a3fa70 [label = "signExtend_0x80_0x20 ((((signExtend_0x20_0x8 (n_v_argv_4_0) - 0x30) + (signExtend_0x20_0x8 (n_v_argv_2_0) - 0x30)) & 0xffffffff))
	 > UINT128 (0x0, 0x0, 0x0, 0xf)"];
	Node0x1a3fa70 -> Node0x1925c00 [label = ""];
	Node0x1925c00 -> Node0x6f7210 [label = "0x0
	 == 0"];
	Node0x6f7210 -> Node0x6f3b90 [label = ""];
}
