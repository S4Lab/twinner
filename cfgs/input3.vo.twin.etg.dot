digraph "Execution Trace Graph" {
	label="Execution Trace Graph";

	Node0 [label = "0"];
	Node0xb8bdf0 [label = "0xb8bdf0"];
	Node0xb8e550 [label = "0xb8e550"];
	Node0xcd4a80 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"last line!\n\"*/ (const char *) 0x401de8);)"];
	Node0x3484db0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"sum of two numbers is NOT more than 15\n\"*/ (const char *) 0x401dc0);)"];
	Node0x4382320 [label = "0x4382320"];
	Node0x6c2b8b0 [label = "0x6c2b8b0"];
	Node0xb7a6990 [label = "0xb7a6990"];
	Node0x14e33220 [label = "0x14e33220"];
	Node0x15e71760 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"sum of two numbers is more than 15\n\"*/ (const char *) 0x401d98);)"];
	Node0x17f67aa0 [label = "0x17f67aa0"];
	Node0x1b193fc0 [label = "0x1b193fc0"];
	Node0x20d81fe0 [label = "0x20d81fe0"];
	Node0x348f9490 [label = "0x348f9490"];
	Node0x3710a380 [label = "0x3710a380"];
	Node0x3bd09420 [label = "0x3bd09420"];
	Node0x43261920 [label = "0x43261920"];
	Node0x4fb92350 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"num1 is smaller than num2\n\"*/ (const char *) 0x401d5a);)"];
	Node0x75ec0170 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"left option is missing!\n\"*/ (const char *) 0x401cf4);)"];
	Node0x78cf4370 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"Usage: program --left <num1> --right <num2>\n\"*/ (const char *) 0x401cc0);)"];
	Node0x9d316080 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"num1 is NOT smaller than num2\n\"*/ (const char *) 0x401d78);)"];
	Node0x9ff3dce0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid right value!\n\"*/ (const char *) 0x401d44);)"];
	Node0xc02e1290 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid right value!\n\"*/ (const char *) 0x401d44);)"];
	Node0xc58e3670 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"right option is missing!\n\"*/ (const char *) 0x401d2a);)"];
	Node0xcd180fd0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid right value!\n\"*/ (const char *) 0x401d44);)"];
	Node0xd650dff0 [label = "FunctionInvocation (calling-line=regs.rax = strcmp (/*\"--left\"*/ (const char *) n_v_argv_1 /*0x7fffffffe55e*/, /*\"--left\"*/ (const char *) 0x401ced);)"];
	Node0xd932d650 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid left value!\n\"*/ (const char *) 0x401d0d);)"];
	Node0x129f80430 [label = "FunctionInvocation (calling-line=regs.rax = strcmp (/*\"--right\"*/ (const char *) m7fffffffe330_1_64 /*0x7fffffffe567*/, /*\"--right\"*/ (const char *) 0x401d22);)"];
	Node0x1359c9b80 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid left value!\n\"*/ (const char *) 0x401d0d);)"];
	Node0x1407e42f0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid left value!\n\"*/ (const char *) 0x401d0d);)"];
	Node0 -> Node0xd650dff0 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x20 ((rdi_0 & 0xffffffff)) & 0xffffffffffffffff))
	 >= UINT128 (0x0, 0x0, 0x0, 0x5)"];
	Node0xd650dff0 -> Node0xb8bdf0 [label = ""];
	Node0 -> Node0x78cf4370 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x20 ((rdi_0 & 0xffffffff)) & 0xffffffffffffffff))
	 < UINT128 (0x0, 0x0, 0x0, 0x5)"];
	Node0x78cf4370 -> Node0x3710a380 [label = ""];
	Node0xb8bdf0 -> Node0xb8e550 [label = "(signExtend_0x40_0x20 ((rax_1 & 0xffffffff)) & 0xffffffffffffffff)
	 == 0x0"];
	Node0xb8bdf0 -> Node0x75ec0170 [label = "(signExtend_0x40_0x20 ((rax_1 & 0xffffffff)) & 0xffffffffffffffff)
	 != 0x0"];
	Node0x75ec0170 -> Node0x3710a380 [label = ""];
	Node0x3710a380 -> Node0x348f9490 [label = "0x0
	 == 0"];
	Node0xb8e550 -> Node0x20d81fe0 [label = "(signExtend_0x40_0x8 (n_v_argv_2_1) & 0xffffffffffffffff)
	 == 0x0"];
	Node0xb8e550 -> Node0x1359c9b80 [label = "(signExtend_0x40_0x8 (n_v_argv_2_1) & 0xffffffffffffffff)
	 != 0x0"];
	Node0x1359c9b80 -> Node0x3710a380 [label = ""];
	Node0x20d81fe0 -> Node0x1b193fc0 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_2_0) & 0xffffffffffffffff))
	 >= UINT128 (0x0, 0x0, 0x0, 0x30)"];
	Node0x20d81fe0 -> Node0xd932d650 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_2_0) & 0xffffffffffffffff))
	 < UINT128 (0x0, 0x0, 0x0, 0x30)"];
	Node0xd932d650 -> Node0x3710a380 [label = ""];
	Node0x1b193fc0 -> Node0x129f80430 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_2_0) & 0xffffffffffffffff))
	 <= UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x129f80430 -> Node0x17f67aa0 [label = ""];
	Node0x1b193fc0 -> Node0x1407e42f0 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_2_0) & 0xffffffffffffffff))
	 > UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x1407e42f0 -> Node0x3710a380 [label = ""];
	Node0x17f67aa0 -> Node0x14e33220 [label = "(signExtend_0x40_0x20 ((rax_2 & 0xffffffff)) & 0xffffffffffffffff)
	 == 0x0"];
	Node0x17f67aa0 -> Node0xc58e3670 [label = "(signExtend_0x40_0x20 ((rax_2 & 0xffffffff)) & 0xffffffffffffffff)
	 != 0x0"];
	Node0xc58e3670 -> Node0x3710a380 [label = ""];
	Node0x14e33220 -> Node0xb7a6990 [label = "(signExtend_0x40_0x8 (n_v_argv_4_1) & 0xffffffffffffffff)
	 == 0x0"];
	Node0x14e33220 -> Node0x9ff3dce0 [label = "(signExtend_0x40_0x8 (n_v_argv_4_1) & 0xffffffffffffffff)
	 != 0x0"];
	Node0x9ff3dce0 -> Node0x3710a380 [label = ""];
	Node0xb7a6990 -> Node0x6c2b8b0 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_4_0) & 0xffffffffffffffff))
	 >= UINT128 (0x0, 0x0, 0x0, 0x30)"];
	Node0xb7a6990 -> Node0xcd180fd0 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_4_0) & 0xffffffffffffffff))
	 < UINT128 (0x0, 0x0, 0x0, 0x30)"];
	Node0xcd180fd0 -> Node0x3710a380 [label = ""];
	Node0x6c2b8b0 -> Node0x4382320 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_4_0) & 0xffffffffffffffff))
	 <= UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x6c2b8b0 -> Node0xc02e1290 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_4_0) & 0xffffffffffffffff))
	 > UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0xc02e1290 -> Node0x3710a380 [label = ""];
	Node0x4382320 -> Node0x4fb92350 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff) | ((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff0000)) & 0xffffffff)) & 0xffffffffffffffff))
	 < signExtend_0x80_0x40 ((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xff) | ((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xffffff00)) & 0xffffffff)) & 0xffffffffffffffff))"];
	Node0x4fb92350 -> Node0x43261920 [label = ""];
	Node0x4382320 -> Node0x9d316080 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff) | ((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff0000)) & 0xffffffff)) & 0xffffffffffffffff))
	 >= signExtend_0x80_0x40 ((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xff) | ((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xffffff00)) & 0xffffffff)) & 0xffffffffffffffff))"];
	Node0x9d316080 -> Node0x43261920 [label = ""];
	Node0x43261920 -> Node0x3484db0 [label = "signExtend_0x80_0x40 (((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xff) | ((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xffffff00)) & 0xffffffff)) + signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff) | ((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff0000)) & 0xffffffff))) & 0xffffffffffffffff))
	 <= UINT128 (0x0, 0x0, 0x0, 0xf)"];
	Node0x3484db0 -> Node0x3bd09420 [label = ""];
	Node0x43261920 -> Node0x15e71760 [label = "signExtend_0x80_0x40 (((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xff) | ((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xffffff00)) & 0xffffffff)) + signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff) | ((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff0000)) & 0xffffffff))) & 0xffffffffffffffff))
	 > UINT128 (0x0, 0x0, 0x0, 0xf)"];
	Node0x15e71760 -> Node0x3bd09420 [label = ""];
	Node0x3bd09420 -> Node0xcd4a80 [label = "0x0
	 == 0"];
	Node0xcd4a80 -> Node0x3710a380 [label = ""];
}
