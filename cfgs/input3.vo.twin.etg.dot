digraph "Execution Trace Graph" {
	label="Execution Trace Graph";

	Node0 [label = "0"];
	Node0xb7bbc0 [label = "0xb7bbc0"];
	Node0xb7be00 [label = "0xb7be00"];
	Node0xc7b150 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"last line!\n\"*/ (const char *) 0x401c68);)"];
	Node0x31e56c0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"sum of two numbers is NOT more than 15\n\"*/ (const char *) 0x401c40);)"];
	Node0x370d820 [label = "0x370d820"];
	Node0x51899a0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"sum of two numbers is more than 15\n\"*/ (const char *) 0x401c18);)"];
	Node0x5c3c360 [label = "0x5c3c360"];
	Node0xa41c150 [label = "0xa41c150"];
	Node0x13c91de0 [label = "0x13c91de0"];
	Node0x16ec6040 [label = "0x16ec6040"];
	Node0x1a0fdfe0 [label = "0x1a0fdfe0"];
	Node0x1fbb3320 [label = "0x1fbb3320"];
	Node0x32e82ef0 [label = "0x32e82ef0"];
	Node0x3560a500 [label = "0x3560a500"];
	Node0x39fc0e40 [label = "0x39fc0e40"];
	Node0x40ffb440 [label = "0x40ffb440"];
	Node0x4daddf20 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"num1 is smaller than num2\n\"*/ (const char *) 0x401bda);)"];
	Node0x7126a140 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid right value!\n\"*/ (const char *) 0x401bc4);)"];
	Node0x7d957ea0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid left value!\n\"*/ (const char *) 0x401b8d);)"];
	Node0xa931bab0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"right option is missing!\n\"*/ (const char *) 0x401baa);)"];
	Node0xb1c13ad0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"num1 is NOT smaller than num2\n\"*/ (const char *) 0x401bf8);)"];
	Node0xd909c610 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid right value!\n\"*/ (const char *) 0x401bc4);)"];
	Node0xf7c2f7a0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid right value!\n\"*/ (const char *) 0x401bc4);)"];
	Node0x10c9c1700 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"left option is missing!\n\"*/ (const char *) 0x401b74);)"];
	Node0x123f72860 [label = "FunctionInvocation (calling-line=regs.rax = strcmp (/*\"--left\"*/ (const char *) n_v_argv_1 /*0x7fffffffe55e*/, /*\"--left\"*/ (const char *) 0x401b6d);)"];
	Node0x124248520 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid left value!\n\"*/ (const char *) 0x401b8d);)"];
	Node0x1320ffe40 [label = "FunctionInvocation (calling-line=regs.rax = strcmp (/*\"--right\"*/ (const char *) m7fffffffe330_1_64 /*0x7fffffffe567*/, /*\"--right\"*/ (const char *) 0x401ba2);)"];
	Node0x145485440 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"invalid left value!\n\"*/ (const char *) 0x401b8d);)"];
	Node0x14c9dc7a0 [label = "FunctionInvocation (calling-line=regs.rax = printf (/*\"Usage: program --left <num1> --right <num2>\n\"*/ (const char *) 0x401b40);)"];
	Node0 -> Node0x123f72860 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x20 ((rdi_0 & 0xffffffff)) & 0xffffffffffffffff))
	 >= UINT128 (0x0, 0x0, 0x0, 0x5)"];
	Node0x123f72860 -> Node0xb7bbc0 [label = ""];
	Node0 -> Node0x14c9dc7a0 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x20 ((rdi_0 & 0xffffffff)) & 0xffffffffffffffff))
	 < UINT128 (0x0, 0x0, 0x0, 0x5)"];
	Node0x14c9dc7a0 -> Node0x3560a500 [label = ""];
	Node0xb7bbc0 -> Node0xb7be00 [label = "(signExtend_0x40_0x20 ((rax_1 & 0xffffffff)) & 0xffffffffffffffff)
	 == 0x0"];
	Node0xb7bbc0 -> Node0x10c9c1700 [label = "(signExtend_0x40_0x20 ((rax_1 & 0xffffffff)) & 0xffffffffffffffff)
	 != 0x0"];
	Node0x10c9c1700 -> Node0x3560a500 [label = ""];
	Node0x3560a500 -> Node0x32e82ef0 [label = "0x0
	 == 0"];
	Node0xb7be00 -> Node0x1fbb3320 [label = "(signExtend_0x40_0x8 (n_v_argv_2_1) & 0xffffffffffffffff)
	 == 0x0"];
	Node0xb7be00 -> Node0x124248520 [label = "(signExtend_0x40_0x8 (n_v_argv_2_1) & 0xffffffffffffffff)
	 != 0x0"];
	Node0x124248520 -> Node0x3560a500 [label = ""];
	Node0x1fbb3320 -> Node0x1a0fdfe0 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_2_0) & 0xffffffffffffffff))
	 >= UINT128 (0x0, 0x0, 0x0, 0x30)"];
	Node0x1fbb3320 -> Node0x7d957ea0 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_2_0) & 0xffffffffffffffff))
	 < UINT128 (0x0, 0x0, 0x0, 0x30)"];
	Node0x7d957ea0 -> Node0x3560a500 [label = ""];
	Node0x1a0fdfe0 -> Node0x1320ffe40 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_2_0) & 0xffffffffffffffff))
	 <= UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x1320ffe40 -> Node0x16ec6040 [label = ""];
	Node0x1a0fdfe0 -> Node0x145485440 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_2_0) & 0xffffffffffffffff))
	 > UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x145485440 -> Node0x3560a500 [label = ""];
	Node0x16ec6040 -> Node0x13c91de0 [label = "(signExtend_0x40_0x20 ((rax_2 & 0xffffffff)) & 0xffffffffffffffff)
	 == 0x0"];
	Node0x16ec6040 -> Node0xa931bab0 [label = "(signExtend_0x40_0x20 ((rax_2 & 0xffffffff)) & 0xffffffffffffffff)
	 != 0x0"];
	Node0xa931bab0 -> Node0x3560a500 [label = ""];
	Node0x13c91de0 -> Node0xa41c150 [label = "(signExtend_0x40_0x8 (n_v_argv_4_1) & 0xffffffffffffffff)
	 == 0x0"];
	Node0x13c91de0 -> Node0xf7c2f7a0 [label = "(signExtend_0x40_0x8 (n_v_argv_4_1) & 0xffffffffffffffff)
	 != 0x0"];
	Node0xf7c2f7a0 -> Node0x3560a500 [label = ""];
	Node0xa41c150 -> Node0x5c3c360 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_4_0) & 0xffffffffffffffff))
	 >= UINT128 (0x0, 0x0, 0x0, 0x30)"];
	Node0xa41c150 -> Node0xd909c610 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_4_0) & 0xffffffffffffffff))
	 < UINT128 (0x0, 0x0, 0x0, 0x30)"];
	Node0xd909c610 -> Node0x3560a500 [label = ""];
	Node0x5c3c360 -> Node0x370d820 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_4_0) & 0xffffffffffffffff))
	 <= UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x5c3c360 -> Node0x7126a140 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x8 (n_v_argv_4_0) & 0xffffffffffffffff))
	 > UINT128 (0x0, 0x0, 0x0, 0x39)"];
	Node0x7126a140 -> Node0x3560a500 [label = ""];
	Node0x370d820 -> Node0x4daddf20 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff) | ((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff0000)) & 0xffffffff)) & 0xffffffffffffffff))
	 < signExtend_0x80_0x40 ((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xff) | ((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xffffff00)) & 0xffffffff)) & 0xffffffffffffffff))"];
	Node0x4daddf20 -> Node0x40ffb440 [label = ""];
	Node0x370d820 -> Node0xb1c13ad0 [label = "signExtend_0x80_0x40 ((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff) | ((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff0000)) & 0xffffffff)) & 0xffffffffffffffff))
	 >= signExtend_0x80_0x40 ((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xff) | ((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xffffff00)) & 0xffffffff)) & 0xffffffffffffffff))"];
	Node0xb1c13ad0 -> Node0x40ffb440 [label = ""];
	Node0x40ffb440 -> Node0x31e56c0 [label = "signExtend_0x80_0x40 (((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xff) | ((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xffffff00)) & 0xffffffff)) + signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff) | ((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff0000)) & 0xffffffff))) & 0xffffffffffffffff))
	 <= UINT128 (0x0, 0x0, 0x0, 0xf)"];
	Node0x31e56c0 -> Node0x39fc0e40 [label = ""];
	Node0x40ffb440 -> Node0x51899a0 [label = "signExtend_0x80_0x40 (((signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xff) | ((signExtend_0x40_0x8 (n_v_argv_4_0) - 0x30) & 0xffffff00)) & 0xffffffff)) + signExtend_0x40_0x20 (((((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff) | ((signExtend_0x40_0x8 (n_v_argv_2_0) - 0x30) & 0xffff0000)) & 0xffffffff))) & 0xffffffffffffffff))
	 > UINT128 (0x0, 0x0, 0x0, 0xf)"];
	Node0x51899a0 -> Node0x39fc0e40 [label = ""];
	Node0x39fc0e40 -> Node0xc7b150 [label = "0x0
	 == 0"];
	Node0xc7b150 -> Node0x3560a500 [label = ""];
}
